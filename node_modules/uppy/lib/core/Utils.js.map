{"version":3,"sources":["../../src/core/Utils.js"],"names":["throttle","require","fileType","flatten","arr","concat","apply","isTouchDevice","window","navigator","maxTouchPoints","truncateString","str","length","substr","secondsToTime","rawSeconds","hours","Math","floor","minutes","seconds","groupBy","array","groupingFn","reduce","result","item","key","xs","get","push","set","Map","every","predicateFn","toArray","list","Array","prototype","slice","call","generateFileID","file","console","log","fileID","name","toLowerCase","replace","data","lastModified","extend","objs","Object","assign","runPromiseSequence","functions","args","promise","Promise","resolve","forEach","func","then","isPreviewSupported","fileTypeSpecific","test","getArrayBuffer","chunk","reject","reader","FileReader","addEventListener","e","target","err","error","readAsArrayBuffer","getFileType","emptyFileType","extensionsToMime","isRemote","type","split","fileExtension","getFileNameAndExtension","buffer","mime","catch","mimeToExtensions","getFileTypeExtension","mimeType","fullFileName","re","fileExt","exec","fileName","getThumbnail","fileData","URL","createObjectURL","supportsMediaRecorder","MediaRecorder","start","dataURItoBlob","dataURI","opts","toFile","binary","atob","i","charCodeAt","File","Uint8Array","Blob","dataURItoFile","copyToClipboard","textToCopy","fallbackString","textArea","document","createElement","setAttribute","position","top","left","width","height","padding","border","outline","boxShadow","background","value","body","appendChild","select","magicCopyFailed","removeChild","prompt","successful","execCommand","getSpeed","fileProgress","bytesUploaded","timeElapsed","Date","uploadStarted","uploadSpeed","getBytesRemaining","bytesTotal","getETA","bytesRemaining","secondsRemaining","round","prettyETA","time","hoursStr","minutesVal","minutesStr","secondsVal","secondsStr","isDOMElement","obj","nodeType","Node","ELEMENT_NODE","findDOMElement","element","querySelector","getSocketHost","url","regex","host","socketProtocol","location","protocol","_emitSocketProgress","uploader","progressData","progress","core","emitter","emit","id","emitSocketProgress","leading","trailing","module","exports"],"mappings":"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","file":"Utils.js","sourcesContent":["const throttle = require('lodash.throttle')\n// we inline file-type module, as opposed to using the NPM version,\n// because of this https://github.com/sindresorhus/file-type/issues/78\n// and https://github.com/sindresorhus/copy-text-to-clipboard/issues/5\nconst fileType = require('../vendor/file-type')\n\n/**\n * A collection of small utility functions that help with dom manipulation, adding listeners,\n * promises and other good things.\n *\n * @module Utils\n */\n\n/**\n * Shallow flatten nested arrays.\n */\nfunction flatten (arr) {\n  return [].concat.apply([], arr)\n}\n\nfunction isTouchDevice () {\n  return 'ontouchstart' in window || // works on most browsers\n          navigator.maxTouchPoints   // works on IE10/11 and Surface\n}\n\n// /**\n//  * Shorter and fast way to select a single node in the DOM\n//  * @param   { String } selector - unique dom selector\n//  * @param   { Object } ctx - DOM node where the target of our search will is located\n//  * @returns { Object } dom node found\n//  */\n// function $ (selector, ctx) {\n//   return (ctx || document).querySelector(selector)\n// }\n\n// /**\n//  * Shorter and fast way to select multiple nodes in the DOM\n//  * @param   { String|Array } selector - DOM selector or nodes list\n//  * @param   { Object } ctx - DOM node where the targets of our search will is located\n//  * @returns { Object } dom nodes found\n//  */\n// function $$ (selector, ctx) {\n//   var els\n//   if (typeof selector === 'string') {\n//     els = (ctx || document).querySelectorAll(selector)\n//   } else {\n//     els = selector\n//     return Array.prototype.slice.call(els)\n//   }\n// }\n\nfunction truncateString (str, length) {\n  if (str.length > length) {\n    return str.substr(0, length / 2) + '...' + str.substr(str.length - length / 4, str.length)\n  }\n  return str\n\n  // more precise version if needed\n  // http://stackoverflow.com/a/831583\n}\n\nfunction secondsToTime (rawSeconds) {\n  const hours = Math.floor(rawSeconds / 3600) % 24\n  const minutes = Math.floor(rawSeconds / 60) % 60\n  const seconds = Math.floor(rawSeconds % 60)\n\n  return { hours, minutes, seconds }\n}\n\n/**\n * Partition array by a grouping function.\n * @param  {[type]} array      Input array\n * @param  {[type]} groupingFn Grouping function\n * @return {[type]}            Array of arrays\n */\nfunction groupBy (array, groupingFn) {\n  return array.reduce((result, item) => {\n    let key = groupingFn(item)\n    let xs = result.get(key) || []\n    xs.push(item)\n    result.set(key, xs)\n    return result\n  }, new Map())\n}\n\n/**\n * Tests if every array element passes predicate\n * @param  {Array}  array       Input array\n * @param  {Object} predicateFn Predicate\n * @return {bool}               Every element pass\n */\nfunction every (array, predicateFn) {\n  return array.reduce((result, item) => {\n    if (!result) {\n      return false\n    }\n\n    return predicateFn(item)\n  }, true)\n}\n\n/**\n * Converts list into array\n*/\nfunction toArray (list) {\n  return Array.prototype.slice.call(list || [], 0)\n}\n\n/**\n * Takes a fileName and turns it into fileID, by converting to lowercase,\n * removing extra characters and adding unix timestamp\n *\n * @param {String} fileName\n *\n */\nfunction generateFileID (file) {\n  console.log(file)\n  let fileID = file.name.toLowerCase()\n  fileID = fileID.replace(/[^A-Z0-9]/ig, '')\n  fileID = fileID + file.data.lastModified\n  return fileID\n}\n\nfunction extend (...objs) {\n  return Object.assign.apply(this, [{}].concat(objs))\n}\n\n/**\n * Runs an array of promise-returning functions in sequence.\n */\nfunction runPromiseSequence (functions, ...args) {\n  let promise = Promise.resolve()\n  functions.forEach((func) => {\n    promise = promise.then(() => func(...args))\n  })\n  return promise\n}\n\n/**\n * Takes function or class, returns its name.\n * Because IE doesn’t support `constructor.name`.\n * https://gist.github.com/dfkaye/6384439, http://stackoverflow.com/a/15714445\n *\n * @param {Object} fn — function\n *\n */\n// function getFnName (fn) {\n//   var f = typeof fn === 'function'\n//   var s = f && ((fn.name && ['', fn.name]) || fn.toString().match(/function ([^\\(]+)/))\n//   return (!f && 'not a function') || (s && s[1] || 'anonymous')\n// }\n\nfunction isPreviewSupported (fileTypeSpecific) {\n  // list of images that browsers can preview\n  if (/^(jpeg|gif|png|svg|svg\\+xml|bmp)$/.test(fileTypeSpecific)) {\n    return true\n  }\n  return false\n}\n\nfunction getArrayBuffer (chunk) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader()\n    reader.addEventListener('load', function (e) {\n      // e.target.result is an ArrayBuffer\n      resolve(e.target.result)\n    })\n    reader.addEventListener('error', function (err) {\n      console.error('FileReader error' + err)\n      reject(err)\n    })\n    // file-type only needs the first 4100 bytes\n    reader.readAsArrayBuffer(chunk)\n  })\n}\n\nfunction getFileType (file) {\n  const emptyFileType = ['', '']\n  const extensionsToMime = {\n    'md': 'text/markdown',\n    'markdown': 'text/markdown',\n    'mp4': 'video/mp4',\n    'mp3': 'audio/mp3'\n  }\n\n  // no smart detection for remote files, just trust the provider\n  if (file.isRemote) {\n    return Promise.resolve(file.type.split('/'))\n  }\n\n  const fileExtension = getFileNameAndExtension(file.name)[1]\n\n  // 1. try to determine file type from magic bytes with file-type module\n  // this should be the most trustworthy way\n  const chunk = file.data.slice(0, 4100)\n  return getArrayBuffer(chunk)\n    .then((buffer) => {\n      const type = fileType(buffer)\n      if (type && type.mime) {\n        return type.mime.split('/')\n      }\n\n      // 2. if that’s no good, check if mime type is set in the file object\n      if (file.type) {\n        return file.type.split('/')\n      }\n\n      // 3. if that’s no good, see if we can map extension to a mime type\n      if (extensionsToMime[fileExtension]) {\n        return extensionsToMime[fileExtension].split('/')\n      }\n\n      // if all fails, well, return empty\n      return emptyFileType\n    })\n    .catch(() => {\n      return emptyFileType\n    })\n\n    // if (file.type) {\n    //   return Promise.resolve(file.type.split('/'))\n    // }\n    // return mime.lookup(file.name)\n    // return file.type ? file.type.split('/') : ['', '']\n}\n\n// TODO Check which types are actually supported in browsers. Chrome likes webm\n// from my testing, but we may need more.\n// We could use a library but they tend to contain dozens of KBs of mappings,\n// most of which will go unused, so not sure if that's worth it.\nconst mimeToExtensions = {\n  'video/ogg': 'ogv',\n  'audio/ogg': 'ogg',\n  'video/webm': 'webm',\n  'audio/webm': 'webm',\n  'video/mp4': 'mp4',\n  'audio/mp3': 'mp3'\n}\n\nfunction getFileTypeExtension (mimeType) {\n  return mimeToExtensions[mimeType] || null\n}\n\n// returns [fileName, fileExt]\nfunction getFileNameAndExtension (fullFileName) {\n  var re = /(?:\\.([^.]+))?$/\n  var fileExt = re.exec(fullFileName)[1]\n  var fileName = fullFileName.replace('.' + fileExt, '')\n  return [fileName, fileExt]\n}\n\nfunction getThumbnail (fileData) {\n  return URL.createObjectURL(fileData)\n}\n\nfunction supportsMediaRecorder () {\n  return typeof MediaRecorder === 'function' && !!MediaRecorder.prototype &&\n    typeof MediaRecorder.prototype.start === 'function'\n}\n\nfunction dataURItoBlob (dataURI, opts, toFile) {\n  // get the base64 data\n  var data = dataURI.split(',')[1]\n\n  // user may provide mime type, if not get it from data URI\n  var mimeType = opts.mimeType || dataURI.split(',')[0].split(':')[1].split(';')[0]\n\n  // default to plain/text if data URI has no mimeType\n  if (mimeType == null) {\n    mimeType = 'plain/text'\n  }\n\n  var binary = atob(data)\n  var array = []\n  for (var i = 0; i < binary.length; i++) {\n    array.push(binary.charCodeAt(i))\n  }\n\n  // Convert to a File?\n  if (toFile) {\n    return new File([new Uint8Array(array)], opts.name || '', {type: mimeType})\n  }\n\n  return new Blob([new Uint8Array(array)], {type: mimeType})\n}\n\nfunction dataURItoFile (dataURI, opts) {\n  return dataURItoBlob(dataURI, opts, true)\n}\n\n/**\n * Copies text to clipboard by creating an almost invisible textarea,\n * adding text there, then running execCommand('copy').\n * Falls back to prompt() when the easy way fails (hello, Safari!)\n * From http://stackoverflow.com/a/30810322\n *\n * @param {String} textToCopy\n * @param {String} fallbackString\n * @return {Promise}\n */\nfunction copyToClipboard (textToCopy, fallbackString) {\n  fallbackString = fallbackString || 'Copy the URL below'\n\n  return new Promise((resolve, reject) => {\n    const textArea = document.createElement('textarea')\n    textArea.setAttribute('style', {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '2em',\n      height: '2em',\n      padding: 0,\n      border: 'none',\n      outline: 'none',\n      boxShadow: 'none',\n      background: 'transparent'\n    })\n\n    textArea.value = textToCopy\n    document.body.appendChild(textArea)\n    textArea.select()\n\n    const magicCopyFailed = (err) => {\n      document.body.removeChild(textArea)\n      window.prompt(fallbackString, textToCopy)\n      return reject('Oops, unable to copy displayed fallback prompt: ' + err)\n    }\n\n    try {\n      const successful = document.execCommand('copy')\n      if (!successful) {\n        return magicCopyFailed('copy command unavailable')\n      }\n      document.body.removeChild(textArea)\n      return resolve()\n    } catch (err) {\n      document.body.removeChild(textArea)\n      return magicCopyFailed(err)\n    }\n  })\n}\n\nfunction getSpeed (fileProgress) {\n  if (!fileProgress.bytesUploaded) return 0\n\n  const timeElapsed = (new Date()) - fileProgress.uploadStarted\n  const uploadSpeed = fileProgress.bytesUploaded / (timeElapsed / 1000)\n  return uploadSpeed\n}\n\nfunction getBytesRemaining (fileProgress) {\n  return fileProgress.bytesTotal - fileProgress.bytesUploaded\n}\n\nfunction getETA (fileProgress) {\n  if (!fileProgress.bytesUploaded) return 0\n\n  const uploadSpeed = getSpeed(fileProgress)\n  const bytesRemaining = getBytesRemaining(fileProgress)\n  const secondsRemaining = Math.round(bytesRemaining / uploadSpeed * 10) / 10\n\n  return secondsRemaining\n}\n\nfunction prettyETA (seconds) {\n  const time = secondsToTime(seconds)\n\n  // Only display hours and minutes if they are greater than 0 but always\n  // display minutes if hours is being displayed\n  // Display a leading zero if the there is a preceding unit: 1m 05s, but 5s\n  const hoursStr = time.hours ? time.hours + 'h ' : ''\n  const minutesVal = time.hours ? ('0' + time.minutes).substr(-2) : time.minutes\n  const minutesStr = minutesVal ? minutesVal + 'm ' : ''\n  const secondsVal = minutesVal ? ('0' + time.seconds).substr(-2) : time.seconds\n  const secondsStr = secondsVal + 's'\n\n  return `${hoursStr}${minutesStr}${secondsStr}`\n}\n\n/**\n * Check if an object is a DOM element. Duck-typing based on `nodeType`.\n *\n * @param {*} obj\n */\nfunction isDOMElement (obj) {\n  return obj && typeof obj === 'object' && obj.nodeType === Node.ELEMENT_NODE\n}\n\n/**\n * Find a DOM element.\n *\n * @param {Node|string} element\n * @return {Node|null}\n */\nfunction findDOMElement (element) {\n  if (typeof element === 'string') {\n    return document.querySelector(element)\n  }\n\n  if (typeof element === 'object' && isDOMElement(element)) {\n    return element\n  }\n}\n\nfunction getSocketHost (url) {\n  // get the host domain\n  var regex = /^(?:https?:\\/\\/|\\/\\/)?(?:[^@\\n]+@)?(?:www\\.)?([^\\n]+)/\n  var host = regex.exec(url)[1]\n  var socketProtocol = location.protocol === 'https:' ? 'wss' : 'ws'\n\n  return `${socketProtocol}://${host}`\n}\n\nfunction _emitSocketProgress (uploader, progressData, file) {\n  const {progress, bytesUploaded, bytesTotal} = progressData\n  if (progress) {\n    uploader.core.log(`Upload progress: ${progress}`)\n    uploader.core.emitter.emit('core:upload-progress', {\n      uploader,\n      id: file.id,\n      bytesUploaded: bytesUploaded,\n      bytesTotal: bytesTotal\n    })\n  }\n}\n\nconst emitSocketProgress = throttle(_emitSocketProgress, 300, {leading: true, trailing: true})\n\nmodule.exports = {\n  generateFileID,\n  toArray,\n  every,\n  flatten,\n  groupBy,\n  extend,\n  runPromiseSequence,\n  supportsMediaRecorder,\n  isTouchDevice,\n  getFileNameAndExtension,\n  truncateString,\n  getFileTypeExtension,\n  getFileType,\n  getArrayBuffer,\n  isPreviewSupported,\n  getThumbnail,\n  secondsToTime,\n  dataURItoBlob,\n  dataURItoFile,\n  getSpeed,\n  getBytesRemaining,\n  getETA,\n  copyToClipboard,\n  prettyETA,\n  findDOMElement,\n  getSocketHost,\n  emitSocketProgress\n}\n"]}